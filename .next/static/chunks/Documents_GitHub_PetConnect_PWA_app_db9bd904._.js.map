{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/med_yassine_khlaf/Documents/GitHub/PetConnect_PWA/app/auth/ForgotPasswordForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { EnvelopeIcon } from '@heroicons/react/24/solid';\n\ninterface ForgotPasswordFormProps {\n    onOpenVerifyOTP: () => void;\n    onOpenLogin: () => void;\n}\n\nconst ForgotPasswordForm = ({ onOpenVerifyOTP, onOpenLogin }: ForgotPasswordFormProps) => {\n    const [email, setEmail] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        setLoading(true);\n        setTimeout(() => {\n            if (!email || !email.includes('@')) {\n                setError('Veuillez entrer une adresse email valide');\n                setLoading(false);\n                return;\n            }\n            setLoading(false);\n            onOpenVerifyOTP(); // Ouvrir la popup de vérification OTP après soumission\n        }, 1500);\n    };\n\n    return (\n        <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\">\n            <div className=\"text-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] rounded-full mb-4\">\n                    <div className=\"bg-gradient-to-r from-[#3D9EFF] to-[#FF9A3D] rounded-full p-3\">\n                        <EnvelopeIcon className=\"w-6 h-6 text-white\" />\n                    </div>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">Mot de passe oublié</h1>\n                <p className=\"text-gray-600 mt-1\">Entrez votre adresse email pour recevoir un code de vérification</p>\n            </div>\n            {error && (\n                <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-md text-sm\">\n                    {error}\n                </div>\n            )}\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Email\n                    </label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <EnvelopeIcon className=\"w-4 h-4 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            required\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            className=\"w-full pl-10 pr-3 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"votre@email.com\"\n                        />\n                    </div>\n                </div>\n                <div>\n                    <button\n                        type=\"submit\"\n                        disabled={loading}\n                        className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] hover:from-[#FFB8C2] hover:to-[#F5F5DC] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2] ${loading ? 'opacity-70 cursor-not-allowed' : ''}`}\n                    >\n                        {loading ? (\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                        ) : (\n                            'Envoyer le code de vérification'\n                        )}\n                    </button>\n                </div>\n            </form>\n            <p className=\"mt-6 text-center text-sm text-gray-600\">\n                Vous vous souvenez de votre mot de passe ?{' '}\n                <button\n                    onClick={() => onOpenLogin()} // Ramène à la popup de login\n                    className=\"font-medium text-[#FFB8C2] hover:text-[#F5F5DC] transition-colors bg-transparent border-none cursor-pointer\"\n                >\n                    Se connecter\n                </button>\n            </p>\n        </div>\n    );\n};\n\nexport default ForgotPasswordForm;"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAUA,MAAM,qBAAqB;QAAC,EAAE,eAAe,EAAE,WAAW,EAA2B;;IACjF,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,kNAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,kNAAQ,EAAC;IAEnC,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;QAChB,SAAS;QACT,WAAW;QACX,WAAW;YACP,IAAI,CAAC,SAAS,CAAC,MAAM,QAAQ,CAAC,MAAM;gBAChC,SAAS;gBACT,WAAW;gBACX;YACJ;YACA,WAAW;YACX,mBAAmB,uDAAuD;QAC9E,GAAG;IACP;IAEA,qBACI,sOAAC;QAAI,WAAU;;0BACX,sOAAC;gBAAI,WAAU;;kCACX,sOAAC;wBAAI,WAAU;kCACX,cAAA,sOAAC;4BAAI,WAAU;sCACX,cAAA,sOAAC,iRAAY;gCAAC,WAAU;;;;;;;;;;;;;;;;kCAGhC,sOAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,sOAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;YAErC,uBACG,sOAAC;gBAAI,WAAU;0BACV;;;;;;0BAGT,sOAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACpC,sOAAC;;0CACG,sOAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAA+C;;;;;;0CAGhF,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC,iRAAY;4CAAC,WAAU;;;;;;;;;;;kDAE5B,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,cAAa;wCACb,QAAQ;wCACR,OAAO;wCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wCACxC,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAIxB,sOAAC;kCACG,cAAA,sOAAC;4BACG,MAAK;4BACL,UAAU;4BACV,WAAW,AAAC,oRAAkU,OAA/C,UAAU,kCAAkC;sCAE1U,wBACG,sOAAC;gCAAI,WAAU;gCAA6C,OAAM;gCAA6B,MAAK;gCAAO,SAAQ;;kDAC/G,sOAAC;wCAAO,WAAU;wCAAa,IAAG;wCAAK,IAAG;wCAAK,GAAE;wCAAK,QAAO;wCAAe,aAAY;;;;;;kDACxF,sOAAC;wCAAK,WAAU;wCAAa,MAAK;wCAAe,GAAE;;;;;;;;;;;2EAGvD;;;;;;;;;;;;;;;;;0BAKhB,sOAAC;gBAAE,WAAU;;oBAAyC;oBACP;kCAC3C,sOAAC;wBACG,SAAS,IAAM;wBACf,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;GAtFM;KAAA;uCAwFS","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///Users/med_yassine_khlaf/Documents/GitHub/PetConnect_PWA/app/auth/VerifyOTPForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { KeyIcon, ArrowLeftIcon, ArrowRightIcon } from '@heroicons/react/24/solid';\n\ninterface VerifyOTPFormProps {\n    onOpenResetPassword: () => void;\n    onOpenLogin: () => void;\n}\n\nconst VerifyOTPForm = ({ onOpenResetPassword, onOpenLogin }: VerifyOTPFormProps) => {\n    const [otp, setOtp] = useState<string[]>(Array(6).fill(''));\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [timeLeft, setTimeLeft] = useState(60);\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n    useEffect(() => {\n        if (timeLeft > 0) {\n            const timerId = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n            return () => clearTimeout(timerId);\n        }\n    }, [timeLeft]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\n        const value = e.target.value;\n        if (value.length > 1) {\n            const pastedValue = value.slice(0, 6);\n            const newOtp = [...otp];\n            for (let i = 0; i < pastedValue.length; i++) {\n                if (index + i < 6) {\n                    newOtp[index + i] = pastedValue[i];\n                }\n            }\n            setOtp(newOtp);\n            const nextIndex = Math.min(index + pastedValue.length, 5);\n            inputRefs.current[nextIndex]?.focus();\n        } else if (/^\\d*$/.test(value)) {\n            const newOtp = [...otp];\n            newOtp[index] = value;\n            setOtp(newOtp);\n            if (value !== '' && index < 5) {\n                inputRefs.current[index + 1]?.focus();\n            }\n        }\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n        if (e.key === 'Backspace' && !otp[index] && index > 0) {\n            inputRefs.current[index - 1]?.focus();\n        }\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        const otpValue = otp.join('');\n        if (otpValue.length !== 6) {\n            setError('Veuillez entrer le code complet à 6 chiffres');\n            return;\n        }\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            onOpenResetPassword();\n        }, 1500);\n    };\n\n    const resendOTP = () => {\n        setTimeLeft(60);\n    };\n\n    return (\n        <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\">\n            <div className=\"text-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] rounded-full mb-4\">\n                    <div className=\"bg-gradient-to-r from-[#3D9EFF] to-[#FF9A3D] rounded-full p-3\">\n                        <KeyIcon className=\"w-6 h-6 text-white\" />\n                    </div>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">Vérification</h1>\n                <p className=\"text-gray-600 mt-1\">Entrez le code à 6 chiffres envoyé à votre adresse email</p>\n            </div>\n            {error && (\n                <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-md text-sm\">\n                    {error}\n                </div>\n            )}\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                    <label htmlFor=\"otp\" className=\"block text-sm font-medium text-gray-700 mb-3\">\n                        Code de vérification\n                    </label>\n                    <div className=\"flex justify-between gap-2\">\n                        {otp.map((digit, index) => (\n                            <input\n                                key={index}\n                                ref={(el) => { inputRefs.current[index] = el; }}\n                                type=\"text\"\n                                maxLength={6}\n                                value={digit}\n                                onChange={(e) => handleChange(e, index)}\n                                onKeyDown={(e) => handleKeyDown(e, index)}\n                                className=\"w-full h-12 text-center text-lg font-semibold text-black border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2]\"\n                                autoFocus={index === 0}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"flex justify-center\">\n                    <button\n                        type=\"button\"\n                        disabled={timeLeft > 0}\n                        onClick={resendOTP}\n                        className={`text-sm font-medium ${timeLeft > 0 ? 'text-gray-400' : 'text-[#FFB8C2] hover:text-[#F5F5DC]'}`}\n                    >\n                        {timeLeft > 0 ? `Renvoyer le code (${timeLeft}s)` : 'Renvoyer le code'}\n                    </button>\n                </div>\n                <div className=\"flex gap-3\">\n                    <button\n                        type=\"button\"\n                        onClick={() => onOpenLogin()}\n                        className=\"w-1/4 flex justify-center items-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2]\"\n                    >\n                        <ArrowLeftIcon className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                        type=\"submit\"\n                        disabled={loading || otp.join('').length !== 6}\n                        className={`w-3/4 flex justify-center items-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] hover:from-[#FFB8C2] hover:to-[#F5F5DC] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2] ${loading || otp.join('').length !== 6 ? 'opacity-70 cursor-not-allowed' : ''}`}\n                    >\n                        {loading ? (\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                        ) : (\n                            <>\n                                <span>Vérifier</span>\n                                <ArrowRightIcon className=\"w-4 h-4 ml-2\" />\n                            </>\n                        )}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default VerifyOTPForm;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///Users/med_yassine_khlaf/Documents/GitHub/PetConnect_PWA/app/auth/ResetPasswordForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { LockClosedIcon, ShieldCheckIcon, CheckCircleIcon, EyeIcon, EyeSlashIcon } from '@heroicons/react/24/solid';\n\nconst ResetPasswordForm = () => {\n    const [formData, setFormData] = useState({\n        password: '',\n        confirmPassword: '',\n    });\n    const [showPassword, setShowPassword] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setFormData((prev) => ({\n            ...prev,\n            [name]: value,\n        }));\n    };\n\n    const passwordStrength = () => {\n        const { password } = formData;\n        if (!password) return 0;\n        let score = 0;\n        if (password.length >= 8) score += 1;\n        if (/[A-Z]/.test(password)) score += 1;\n        if (/[0-9]/.test(password)) score += 1;\n        if (/[^A-Za-z0-9]/.test(password)) score += 1;\n        return score;\n    };\n\n    const strengthLabel = () => {\n        const strength = passwordStrength();\n        if (strength === 0) return '';\n        if (strength === 1) return 'Faible';\n        if (strength === 2) return 'Moyen';\n        if (strength === 3) return 'Bon';\n        return 'Excellent';\n    };\n\n    const strengthColor = () => {\n        const strength = passwordStrength();\n        if (strength === 0) return 'bg-gray-200';\n        if (strength === 1) return 'bg-red-500';\n        if (strength === 2) return 'bg-orange-500';\n        if (strength === 3) return 'bg-yellow-500';\n        return 'bg-green-500';\n    };\n\n    const passwordsMatch = () => {\n        return formData.password === formData.confirmPassword && formData.password !== '';\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        if (formData.password.length < 8) {\n            setError('Le mot de passe doit contenir au moins 8 caractères');\n            return;\n        }\n        if (!passwordsMatch()) {\n            setError('Les mots de passe ne correspondent pas');\n            return;\n        }\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            setSuccess(true);\n        }, 1500);\n    };\n\n    if (success) {\n        return (\n            <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\">\n                <div className=\"text-center mb-6\">\n                    <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] rounded-full mb-4\">\n                        <CheckCircleIcon className=\"w-6 h-6 text-green-500\" />\n                    </div>\n                    <h1 className=\"text-2xl font-bold text-gray-800\">Mot de passe réinitialisé</h1>\n                    <p className=\"text-gray-600 mt-3\">\n                        Votre mot de passe a été réinitialisé avec succès. Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.\n                    </p>\n                </div>\n                <div className=\"mt-6\">\n                    <a href=\"/login\" className=\"w-full flex justify-center items-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] hover:from-[#FFB8C2] hover:to-[#F5F5DC] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2]\">\n                        Se connecter\n                    </a>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\">\n            <div className=\"text-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] rounded-full mb-4\">\n                    <div className=\"bg-gradient-to-r from-[#3D9EFF] to-[#FF9A3D] rounded-full p-3\">\n                        <ShieldCheckIcon className=\"w-6 h-6 text-white\" />\n                    </div>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">Réinitialiser le mot de passe</h1>\n                <p className=\"text-gray-600 mt-1\">Créez un nouveau mot de passe sécurisé</p>\n            </div>\n            {error && (\n                <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-md text-sm\">\n                    {error}\n                </div>\n            )}\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Nouveau mot de passe\n                    </label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <LockClosedIcon className=\"w-4 h-4 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"password\"\n                            name=\"password\"\n                            type={showPassword ? 'text' : 'password'}\n                            required\n                            value={formData.password}\n                            onChange={handleChange}\n                            className=\"w-full pl-10 pr-10 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"••••••••\"\n                        />\n                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                            <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"text-gray-400 hover:text-gray-500 focus:outline-none\">\n                                {showPassword ? <EyeSlashIcon className=\"w-4 h-4\" /> : <EyeIcon className=\"w-4 h-4\" />}\n                            </button>\n                        </div>\n                    </div>\n                    {formData.password && (\n                        <div className=\"mt-2\">\n                            <div className=\"flex items-center justify-between mb-1\">\n                                <div className=\"w-full bg-gray-200 rounded-full h-2 mr-2\">\n                                    <div className={`h-2 rounded-full ${strengthColor()}`} style={{ width: `${passwordStrength() * 25}%` }}></div>\n                                </div>\n                                <span className=\"text-xs text-gray-500\">{strengthLabel()}</span>\n                            </div>\n                            <ul className=\"text-xs text-gray-500 space-y-1 mt-2\">\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${formData.password.length >= 8 ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {formData.password.length >= 8 ? <CheckCircleIcon className=\"w-4 h-4\" /> : '•'}\n                                    </span>\n                                    Au moins 8 caractères\n                                </li>\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${/[A-Z]/.test(formData.password) ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {/[A-Z]/.test(formData.password) ? <CheckCircleIcon className=\"w-4 h-4\" /> : '•'}\n                                    </span>\n                                    Au moins une majuscule\n                                </li>\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${/[0-9]/.test(formData.password) ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {/[0-9]/.test(formData.password) ? <CheckCircleIcon className=\"w-4 h-4\" /> : '•'}\n                                    </span>\n                                    Au moins un chiffre\n                                </li>\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${/[^A-Za-z0-9]/.test(formData.password) ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {/[^A-Za-z0-9]/.test(formData.password) ? <CheckCircleIcon className=\"w-4 h-4\" /> : '•'}\n                                    </span>\n                                    Au moins un caractère spécial\n                                </li>\n                            </ul>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Confirmer le mot de passe\n                    </label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <LockClosedIcon className=\"w-4 h-4 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"confirmPassword\"\n                            name=\"confirmPassword\"\n                            type={showPassword ? 'text' : 'password'}\n                            required\n                            value={formData.confirmPassword}\n                            onChange={handleChange}\n                            className={`w-full pl-10 pr-10 py-2 border rounded-md focus:outline-none focus:ring-2 ${formData.confirmPassword ? (passwordsMatch() ? 'border-green-300 focus:ring-green-500 focus:border-green-500' : 'border-red-300 focus:ring-red-500 focus:border-red-500') : 'border-black focus:ring-[#FFB8C2] focus:border-[#FFB8C2]'} text-black`}\n                            placeholder=\"••••••••\"\n                        />\n                        {formData.confirmPassword && (\n                            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                                {passwordsMatch() ? <CheckCircleIcon className=\"w-4 h-4 text-green-500\" /> : <EyeSlashIcon className=\"w-4 h-4 text-red-500\" />}\n                            </div>\n                        )}\n                    </div>\n                    {formData.confirmPassword && !passwordsMatch() && (\n                        <p className=\"mt-1 text-xs text-red-500\">Les mots de passe ne correspondent pas</p>\n                    )}\n                </div>\n                <div>\n                    <button\n                        type=\"submit\"\n                        disabled={loading || !passwordsMatch() || formData.password.length < 8}\n                        className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] hover:from-[#FFB8C2] hover:to-[#F5F5DC] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2] ${loading || !passwordsMatch() || formData.password.length < 8 ? 'opacity-70 cursor-not-allowed' : ''}`}\n                    >\n                        {loading ? (\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                        ) : (\n                            'Réinitialiser le mot de passe'\n                        )}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ResetPasswordForm;"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAHA;;;AAKA,MAAM,oBAAoB;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,kNAAQ,EAAC;QACrC,UAAU;QACV,iBAAiB;IACrB;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,kNAAQ,EAAC;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,kNAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kNAAQ,EAAC;IAEvC,MAAM,eAAe,CAAC;QAClB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,OAAS,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACZ,CAAC;IACL;IAEA,MAAM,mBAAmB;QACrB,MAAM,EAAE,QAAQ,EAAE,GAAG;QACrB,IAAI,CAAC,UAAU,OAAO;QACtB,IAAI,QAAQ;QACZ,IAAI,SAAS,MAAM,IAAI,GAAG,SAAS;QACnC,IAAI,QAAQ,IAAI,CAAC,WAAW,SAAS;QACrC,IAAI,QAAQ,IAAI,CAAC,WAAW,SAAS;QACrC,IAAI,eAAe,IAAI,CAAC,WAAW,SAAS;QAC5C,OAAO;IACX;IAEA,MAAM,gBAAgB;QAClB,MAAM,WAAW;QACjB,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,aAAa,GAAG,OAAO;QAC3B,OAAO;IACX;IAEA,MAAM,gBAAgB;QAClB,MAAM,WAAW;QACjB,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,aAAa,GAAG,OAAO;QAC3B,OAAO;IACX;IAEA,MAAM,iBAAiB;QACnB,OAAO,SAAS,QAAQ,KAAK,SAAS,eAAe,IAAI,SAAS,QAAQ,KAAK;IACnF;IAEA,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;QAChB,SAAS;QACT,IAAI,SAAS,QAAQ,CAAC,MAAM,GAAG,GAAG;YAC9B,SAAS;YACT;QACJ;QACA,IAAI,CAAC,kBAAkB;YACnB,SAAS;YACT;QACJ;QACA,WAAW;QACX,WAAW;YACP,WAAW;YACX,WAAW;QACf,GAAG;IACP;IAEA,IAAI,SAAS;QACT,qBACI,sOAAC;YAAI,WAAU;;8BACX,sOAAC;oBAAI,WAAU;;sCACX,sOAAC;4BAAI,WAAU;sCACX,cAAA,sOAAC,0RAAe;gCAAC,WAAU;;;;;;;;;;;sCAE/B,sOAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,sOAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAItC,sOAAC;oBAAI,WAAU;8BACX,cAAA,sOAAC;wBAAE,MAAK;wBAAS,WAAU;kCAAgS;;;;;;;;;;;;;;;;;IAM3U;IAEA,qBACI,sOAAC;QAAI,WAAU;;0BACX,sOAAC;gBAAI,WAAU;;kCACX,sOAAC;wBAAI,WAAU;kCACX,cAAA,sOAAC;4BAAI,WAAU;sCACX,cAAA,sOAAC,0RAAe;gCAAC,WAAU;;;;;;;;;;;;;;;;kCAGnC,sOAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,sOAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;YAErC,uBACG,sOAAC;gBAAI,WAAU;0BACV;;;;;;0BAGT,sOAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACpC,sOAAC;;0CACG,sOAAC;gCAAM,SAAQ;gCAAW,WAAU;0CAA+C;;;;;;0CAGnF,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC,uRAAc;4CAAC,WAAU;;;;;;;;;;;kDAE9B,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAM,eAAe,SAAS;wCAC9B,QAAQ;wCACR,OAAO,SAAS,QAAQ;wCACxB,UAAU;wCACV,WAAU;wCACV,aAAY;;;;;;kDAEhB,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC;4CAAO,MAAK;4CAAS,SAAS,IAAM,gBAAgB,CAAC;4CAAe,WAAU;sDAC1E,6BAAe,sOAAC,iRAAY;gDAAC,WAAU;;;;;yGAAe,sOAAC,kQAAO;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;4BAIrF,SAAS,QAAQ,kBACd,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;;0DACX,sOAAC;gDAAI,WAAU;0DACX,cAAA,sOAAC;oDAAI,WAAW,AAAC,oBAAmC,OAAhB;oDAAmB,OAAO;wDAAE,OAAO,AAAC,GAA0B,OAAxB,qBAAqB,IAAG;oDAAG;;;;;;;;;;;0DAEzG,sOAAC;gDAAK,WAAU;0DAAyB;;;;;;;;;;;;kDAE7C,sOAAC;wCAAG,WAAU;;0DACV,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAA0E,OAAnE,SAAS,QAAQ,CAAC,MAAM,IAAI,IAAI,mBAAmB;kEACvE,SAAS,QAAQ,CAAC,MAAM,IAAI,kBAAI,sOAAC,0RAAe;4DAAC,WAAU;;;;;uGAAe;;;;;;oDACxE;;;;;;;0DAGX,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAA4E,OAArE,QAAQ,IAAI,CAAC,SAAS,QAAQ,IAAI,mBAAmB;kEACzE,QAAQ,IAAI,CAAC,SAAS,QAAQ,kBAAI,sOAAC,0RAAe;4DAAC,WAAU;;;;;uGAAe;;;;;;oDAC1E;;;;;;;0DAGX,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAA4E,OAArE,QAAQ,IAAI,CAAC,SAAS,QAAQ,IAAI,mBAAmB;kEACzE,QAAQ,IAAI,CAAC,SAAS,QAAQ,kBAAI,sOAAC,0RAAe;4DAAC,WAAU;;;;;uGAAe;;;;;;oDAC1E;;;;;;;0DAGX,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAAmF,OAA5E,eAAe,IAAI,CAAC,SAAS,QAAQ,IAAI,mBAAmB;kEAChF,eAAe,IAAI,CAAC,SAAS,QAAQ,kBAAI,sOAAC,0RAAe;4DAAC,WAAU;;;;;uGAAe;;;;;;oDACjF;;;;;;;;;;;;;;;;;;;;;;;;;kCAO3B,sOAAC;;0CACG,sOAAC;gCAAM,SAAQ;gCAAkB,WAAU;0CAA+C;;;;;;0CAG1F,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC,uRAAc;4CAAC,WAAU;;;;;;;;;;;kDAE9B,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAM,eAAe,SAAS;wCAC9B,QAAQ;wCACR,OAAO,SAAS,eAAe;wCAC/B,UAAU;wCACV,WAAW,AAAC,6EAAmT,OAAvO,SAAS,eAAe,GAAI,mBAAmB,iEAAiE,2DAA4D,4DAA2D;wCAC/T,aAAY;;;;;;oCAEf,SAAS,eAAe,kBACrB,sOAAC;wCAAI,WAAU;kDACV,iCAAmB,sOAAC,0RAAe;4CAAC,WAAU;;;;;qGAA8B,sOAAC,iRAAY;4CAAC,WAAU;;;;;;;;;;;;;;;;;4BAIhH,SAAS,eAAe,IAAI,CAAC,kCAC1B,sOAAC;gCAAE,WAAU;0CAA4B;;;;;;;;;;;;kCAGjD,sOAAC;kCACG,cAAA,sOAAC;4BACG,MAAK;4BACL,UAAU,WAAW,CAAC,oBAAoB,SAAS,QAAQ,CAAC,MAAM,GAAG;4BACrE,WAAW,AAAC,oRAAuX,OAApG,WAAW,CAAC,oBAAoB,SAAS,QAAQ,CAAC,MAAM,GAAG,IAAI,kCAAkC;sCAE/X,wBACG,sOAAC;gCAAI,WAAU;gCAA6C,OAAM;gCAA6B,MAAK;gCAAO,SAAQ;;kDAC/G,sOAAC;wCAAO,WAAU;wCAAa,IAAG;wCAAK,IAAG;wCAAK,GAAE;wCAAK,QAAO;wCAAe,aAAY;;;;;;kDACxF,sOAAC;wCAAK,WAAU;wCAAa,MAAK;wCAAe,GAAE;;;;;;;;;;;2EAGvD;;;;;;;;;;;;;;;;;;;;;;;AAO5B;GAvNM;KAAA;uCAyNS","debugId":null}},
    {"offset": {"line": 1152, "column": 0}, "map": {"version":3,"sources":["file:///Users/med_yassine_khlaf/Documents/GitHub/PetConnect_PWA/app/auth/Login.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { UserIcon, LockClosedIcon, EyeIcon, EyeSlashIcon } from '@heroicons/react/24/solid';\nimport { useRouter } from 'next/navigation';\n\ninterface LoginProps {\n    onSwitchToRegister: () => void;\n    onOpenForgotPassword: () => void;\n}\n\nconst Login = ({ onSwitchToRegister, onOpenForgotPassword }: LoginProps) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const router = useRouter();\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            // Temporairement, rediriger directement vers home sans vérification\n            router.push('/home');\n            // if (email === 'demo@example.com' && password === 'password') {\n            //   router.push('/home');\n            // } else {\n            //   setError('Email ou mot de passe incorrect');\n            // }\n        }, 1500);\n    };\n\n    return (\n        <>\n            <div className=\"text-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] rounded-full mb-4\">\n                    <div className=\"bg-gradient-to-r from-[#3D9EFF] to-[#FF9A3D] rounded-full p-3\">\n                        <UserIcon className=\"w-6 h-6 text-white\" />\n                    </div>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">Connexion</h1>\n                <p className=\"text-gray-600 mt-1\">Accédez à votre espace PetCareVerse</p>\n            </div>\n            {error && (\n                <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-md text-sm\">\n                    {error}\n                </div>\n            )}\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <UserIcon className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            required\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            className=\"w-full pl-10 pr-3 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"votre@email.com\"\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">Mot de passe</label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <LockClosedIcon className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"password\"\n                            name=\"password\"\n                            type={showPassword ? 'text' : 'password'}\n                            autoComplete=\"current-password\"\n                            required\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            className=\"w-full pl-10 pr-10 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"••••••••\"\n                        />\n                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                            <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"text-gray-400 hover:text-gray-500 focus:outline-none\">\n                                {showPassword ? <EyeSlashIcon className=\"w-6 h-6\" /> : <EyeIcon className=\"w-6 h-6\" />}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                        <input\n                            id=\"remember-me\"\n                            name=\"remember-me\"\n                            type=\"checkbox\"\n                            checked={rememberMe}\n                            onChange={(e) => setRememberMe(e.target.checked)}\n                            className=\"h-4 w-4 text-[#FFB8C2] focus:ring-[#FFB8C2] border-gray-300 rounded\"\n                        />\n                        <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-700\">Se souvenir de moi</label>\n                    </div>\n                    <div className=\"text-sm\">\n                        <button onClick={() => onOpenForgotPassword()} className=\"font-medium text-[#FFB8C2] hover:text-[#F5F5DC] transition-colors bg-transparent border-none cursor-pointer\">\n                            Mot de passe oublié ?\n                        </button>\n                    </div>\n                </div>\n                <div>\n                    <button\n                        type=\"submit\"\n                        disabled={loading}\n                        className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] hover:from-[#FFB8C2] hover:to-[#F5F5DC] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2] ${loading ? 'opacity-70 cursor-not-allowed' : ''}`}\n                    >\n                        {loading ? (\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                        ) : (\n                            'Se connecter'\n                        )}\n                    </button>\n                </div>\n            </form>\n            <div className=\"mt-6\">\n                <div className=\"relative\">\n                    <div className=\"absolute inset-0 flex items-center\">\n                        <div className=\"w-full border-t border-gray-300\"></div>\n                    </div>\n                    <div className=\"relative flex justify-center text-sm\">\n                        <span className=\"px-2 bg-white text-gray-500\">Ou continuer avec</span>\n                    </div>\n                </div>\n                <div className=\"mt-6 grid grid-cols-2 gap-3\">\n                    <button type=\"button\" className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors\">\n                        <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                            <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\" />\n                            <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\" />\n                            <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" fill=\"#FBBC05\" />\n                            <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" fill=\"#EA4335\" />\n                        </svg>\n                    </button>\n                    <button type=\"button\" className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors\">\n                        <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                            <path fillRule=\"evenodd\" d=\"M10 0C4.477 0 0 4.477 0 10c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V19c0 .27.16.59.67.5C17.14 18.16 20 14.42 20 10A10 10 0 0010 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            <p className=\"mt-8 text-center text-sm text-gray-600\">\n                Pas encore de compte ? <button onClick={onSwitchToRegister} className=\"font-medium text-[#FFB8C2] hover:text-[#F5F5DC] transition-colors bg-transparent border-none cursor-pointer\">Créer un compte</button>\n            </p>\n        </>\n    );\n};\n\nexport default Login;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":["file:///Users/med_yassine_khlaf/Documents/GitHub/PetConnect_PWA/app/auth/Register.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { UserIcon, EnvelopeIcon, LockClosedIcon, CheckIcon, XMarkIcon, EyeIcon, EyeSlashIcon } from '@heroicons/react/24/solid';\nimport { XIcon } from 'lucide-react';\n\nconst Register = ({ onSwitchToLogin }: { onSwitchToLogin: () => void }) => {\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n    const [termsAccepted, setTermsAccepted] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setFormData((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const passwordStrength = () => {\n        const { password } = formData;\n        if (!password) return 0;\n        let score = 0;\n        if (password.length >= 8) score += 1;\n        if (/[A-Z]/.test(password)) score += 1;\n        if (/[0-9]/.test(password)) score += 1;\n        if (/[^A-Za-z0-9]/.test(password)) score += 1;\n        return score;\n    };\n\n    const passwordsMatch = () => {\n        return formData.password === formData.confirmPassword && formData.password !== '';\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        if (!passwordsMatch() || !termsAccepted) return;\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            // In a real app, handle registration\n        }, 1500);\n    };\n\n    return (\n        <>\n            <div className=\"text-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] rounded-full mb-4\">\n                    <div className=\"bg-gradient-to-r from-[#3D9EFF] to-[#FF9A3D] rounded-full p-3\">\n                        <UserIcon className=\"w-6 h-6 text-white\" />\n                    </div>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">Créer un compte</h1>\n                <p className=\"text-gray-600 mt-1\">Rejoignez PetCareVerse dès aujourd'hui</p>\n            </div>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                        <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Prénom</label>\n                        <input\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            type=\"text\"\n                            required\n                            value={formData.firstName}\n                            onChange={handleChange}\n                            className=\"w-full px-3 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"Sophie\"\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Nom</label>\n                        <input\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            type=\"text\"\n                            required\n                            value={formData.lastName}\n                            onChange={handleChange}\n                            className=\"w-full px-3 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"Martin\"\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <EnvelopeIcon className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            required\n                            value={formData.email}\n                            onChange={handleChange}\n                            className=\"w-full pl-10 pr-3 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"votre@email.com\"\n                        />\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">Mot de passe</label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <LockClosedIcon className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"password\"\n                            name=\"password\"\n                            type={showPassword ? 'text' : 'password'}\n                            required\n                            value={formData.password}\n                            onChange={handleChange}\n                            className=\"w-full pl-10 pr-10 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"••••••••\"\n                        />\n                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                            <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"text-gray-400 hover:text-gray-500 focus:outline-none\">\n                                {showPassword ? <EyeSlashIcon className=\"w-6 h-6\" /> : <EyeIcon className=\"w-6 h-6\" />}\n                            </button>\n                        </div>\n                    </div>\n                    {formData.password && (\n                        <div className=\"mt-2\">\n                            <div className=\"flex items-center justify-between mb-1\">\n                                <div className=\"w-full bg-gray-200 rounded-full h-2 mr-2\">\n                                    <div className={`h-2 rounded-full ${passwordStrength() === 0 ? 'bg-gray-200' : passwordStrength() === 1 ? 'bg-red-500' : passwordStrength() === 2 ? 'bg-orange-500' : passwordStrength() === 3 ? 'bg-yellow-500' : 'bg-green-500'}`} style={{ width: `${passwordStrength() * 25}%` }}></div>\n                                </div>\n                                <span className=\"text-xs text-gray-500\">{passwordStrength() === 0 ? '' : passwordStrength() === 1 ? 'Faible' : passwordStrength() === 2 ? 'Moyen' : passwordStrength() === 3 ? 'Bon' : 'Excellent'}</span>\n                            </div>\n                            <ul className=\"text-xs text-gray-500 space-y-1 mt-2\">\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${formData.password.length >= 8 ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {formData.password.length >= 8 ? <CheckIcon className=\"w-6 h-6\" /> : '•'}\n                                    </span>\n                                    Au moins 8 caractères\n                                </li>\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${/[A-Z]/.test(formData.password) ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {/[A-Z]/.test(formData.password) ? <CheckIcon className=\"w-6 h-6\" /> : '•'}\n                                    </span>\n                                    Au moins une majuscule\n                                </li>\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${/[0-9]/.test(formData.password) ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {/[0-9]/.test(formData.password) ? <CheckIcon className=\"w-6 h-6\" /> : '•'}\n                                    </span>\n                                    Au moins un chiffre\n                                </li>\n                                <li className=\"flex items-center\">\n                                    <span className={`mr-1 ${/[^A-Za-z0-9]/.test(formData.password) ? 'text-green-500' : 'text-gray-400'}`}>\n                                        {/[^A-Za-z0-9]/.test(formData.password) ? <CheckIcon className=\"w-6 h-6\" /> : '•'}\n                                    </span>\n                                    Au moins un caractère spécial\n                                </li>\n                            </ul>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">Confirmer le mot de passe</label>\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <LockClosedIcon className=\"w-6 h-6 text-gray-400\" />\n                        </div>\n                        <input\n                            id=\"confirmPassword\"\n                            name=\"confirmPassword\"\n                            type={showPassword ? 'text' : 'password'}\n                            required\n                            value={formData.confirmPassword}\n                            onChange={handleChange}\n                            className=\"w-full pl-10 pr-10 py-2 border border-black rounded-md focus:outline-none focus:ring-2 focus:ring-[#FFB8C2] focus:border-[#FFB8C2] text-black\"\n                            placeholder=\"••••••••\"\n                        />\n                        {formData.confirmPassword && (\n                            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                                {passwordsMatch() ? <CheckIcon className=\"w-6 h-6 text-green-500\" /> : <XIcon className=\"w-6 h-6 text-red-500\" />}\n                            </div>\n                        )}\n                    </div>\n                    {formData.confirmPassword && !passwordsMatch() && (\n                        <p className=\"mt-1 text-xs text-red-500\">Les mots de passe ne correspondent pas</p>\n                    )}\n                </div>\n                <div className=\"flex items-center\">\n                    <input\n                        id=\"terms\"\n                        name=\"terms\"\n                        type=\"checkbox\"\n                        checked={termsAccepted}\n                        onChange={(e) => setTermsAccepted(e.target.checked)}\n                        required\n                        className=\"h-4 w-4 text-[#FFB8C2] focus:ring-[#FFB8C2] border-gray-300 rounded\"\n                    />\n                    <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-700\">\n                        J'accepte les <a href=\"#\" className=\"font-medium text-[#FFB8C2] hover:text-[#F5F5DC] transition-colors\">conditions d'utilisation</a> et la <a href=\"#\" className=\"font-medium text-[#FFB8C2] hover:text-[#F5F5DC] transition-colors\">politique de confidentialité</a>\n                    </label>\n                </div>\n                <div>\n                    <button\n                        type=\"submit\"\n                        disabled={loading || !passwordsMatch() || !termsAccepted}\n                        className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] hover:from-[#FFB8C2] hover:to-[#F5F5DC] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FFB8C2] ${loading || !passwordsMatch() || !termsAccepted ? 'opacity-70 cursor-not-allowed' : ''}`}\n                    >\n                        {loading ? (\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                        ) : (\n                            'Créer mon compte'\n                        )}\n                    </button>\n                </div>\n            </form>\n            <div className=\"mt-6\">\n                <div className=\"relative\">\n                    <div className=\"absolute inset-0 flex items-center\">\n                        <div className=\"w-full border-t border-gray-300\"></div>\n                    </div>\n                    <div className=\"relative flex justify-center text-sm\">\n                        <span className=\"px-2 bg-white text-gray-500\">Ou s'inscrire avec</span>\n                    </div>\n                </div>\n                <div className=\"mt-6 grid grid-cols-2 gap-3\">\n                    <button type=\"button\" className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors\">\n                        <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                            <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\" />\n                            <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\" />\n                            <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" fill=\"#FBBC05\" />\n                            <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" fill=\"#EA4335\" />\n                        </svg>\n                    </button>\n                    <button type=\"button\" className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors\">\n                        <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                            <path fillRule=\"evenodd\" d=\"M10 0C4.477 0 0 4.477 0 10c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V19c0 .27.16.59.67.5C17.14 18.16 20 14.42 20 10A10 10 0 0010 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            <p className=\"mt-8 text-center text-sm text-gray-600\">\n                Déjà un compte ? <button onClick={onSwitchToLogin} className=\"font-medium text-[#FFB8C2] hover:text-[#F5F5DC] transition-colors bg-transparent border-none cursor-pointer\">Se connecter</button>\n            </p>\n        </>\n    );\n};\n\nexport default Register;"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAJA;;;;AAMA,MAAM,WAAW;QAAC,EAAE,eAAe,EAAmC;;IAClE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,kNAAQ,EAAC;QACrC,WAAW;QACX,UAAU;QACV,OAAO;QACP,UAAU;QACV,iBAAiB;IACrB;IACA,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,kNAAQ,EAAC;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,kNAAQ,EAAC;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,kNAAQ,EAAC;IAEjD,MAAM,eAAe,CAAC;QAClB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAM,CAAC;IACrD;IAEA,MAAM,mBAAmB;QACrB,MAAM,EAAE,QAAQ,EAAE,GAAG;QACrB,IAAI,CAAC,UAAU,OAAO;QACtB,IAAI,QAAQ;QACZ,IAAI,SAAS,MAAM,IAAI,GAAG,SAAS;QACnC,IAAI,QAAQ,IAAI,CAAC,WAAW,SAAS;QACrC,IAAI,QAAQ,IAAI,CAAC,WAAW,SAAS;QACrC,IAAI,eAAe,IAAI,CAAC,WAAW,SAAS;QAC5C,OAAO;IACX;IAEA,MAAM,iBAAiB;QACnB,OAAO,SAAS,QAAQ,KAAK,SAAS,eAAe,IAAI,SAAS,QAAQ,KAAK;IACnF;IAEA,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;QAChB,SAAS;QACT,IAAI,CAAC,oBAAoB,CAAC,eAAe;QACzC,WAAW;QACX,WAAW;YACP,WAAW;QACX,qCAAqC;QACzC,GAAG;IACP;IAEA,qBACI;;0BACI,sOAAC;gBAAI,WAAU;;kCACX,sOAAC;wBAAI,WAAU;kCACX,cAAA,sOAAC;4BAAI,WAAU;sCACX,cAAA,sOAAC,qQAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;kCAG5B,sOAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,sOAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAEtC,sOAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACpC,sOAAC;wBAAI,WAAU;;0CACX,sOAAC;;kDACG,sOAAC;wCAAM,SAAQ;wCAAY,WAAU;kDAA+C;;;;;;kDACpF,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,QAAQ;wCACR,OAAO,SAAS,SAAS;wCACzB,UAAU;wCACV,WAAU;wCACV,aAAY;;;;;;;;;;;;0CAGpB,sOAAC;;kDACG,sOAAC;wCAAM,SAAQ;wCAAW,WAAU;kDAA+C;;;;;;kDACnF,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,QAAQ;wCACR,OAAO,SAAS,QAAQ;wCACxB,UAAU;wCACV,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAIxB,sOAAC;;0CACG,sOAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAA+C;;;;;;0CAChF,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC,iRAAY;4CAAC,WAAU;;;;;;;;;;;kDAE5B,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAK;wCACL,cAAa;wCACb,QAAQ;wCACR,OAAO,SAAS,KAAK;wCACrB,UAAU;wCACV,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAIxB,sOAAC;;0CACG,sOAAC;gCAAM,SAAQ;gCAAW,WAAU;0CAA+C;;;;;;0CACnF,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC,uRAAc;4CAAC,WAAU;;;;;;;;;;;kDAE9B,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAM,eAAe,SAAS;wCAC9B,QAAQ;wCACR,OAAO,SAAS,QAAQ;wCACxB,UAAU;wCACV,WAAU;wCACV,aAAY;;;;;;kDAEhB,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC;4CAAO,MAAK;4CAAS,SAAS,IAAM,gBAAgB,CAAC;4CAAe,WAAU;sDAC1E,6BAAe,sOAAC,iRAAY;gDAAC,WAAU;;;;;yGAAe,sOAAC,kQAAO;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;4BAIrF,SAAS,QAAQ,kBACd,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;;0DACX,sOAAC;gDAAI,WAAU;0DACX,cAAA,sOAAC;oDAAI,WAAW,AAAC,oBAAiN,OAA9L,uBAAuB,IAAI,gBAAgB,uBAAuB,IAAI,eAAe,uBAAuB,IAAI,kBAAkB,uBAAuB,IAAI,kBAAkB;oDAAkB,OAAO;wDAAE,OAAO,AAAC,GAA0B,OAAxB,qBAAqB,IAAG;oDAAG;;;;;;;;;;;0DAEvR,sOAAC;gDAAK,WAAU;0DAAyB,uBAAuB,IAAI,KAAK,uBAAuB,IAAI,WAAW,uBAAuB,IAAI,UAAU,uBAAuB,IAAI,QAAQ;;;;;;;;;;;;kDAE3L,sOAAC;wCAAG,WAAU;;0DACV,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAA0E,OAAnE,SAAS,QAAQ,CAAC,MAAM,IAAI,IAAI,mBAAmB;kEACvE,SAAS,QAAQ,CAAC,MAAM,IAAI,kBAAI,sOAAC,wQAAS;4DAAC,WAAU;;;;;uGAAe;;;;;;oDAClE;;;;;;;0DAGX,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAA4E,OAArE,QAAQ,IAAI,CAAC,SAAS,QAAQ,IAAI,mBAAmB;kEACzE,QAAQ,IAAI,CAAC,SAAS,QAAQ,kBAAI,sOAAC,wQAAS;4DAAC,WAAU;;;;;uGAAe;;;;;;oDACpE;;;;;;;0DAGX,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAA4E,OAArE,QAAQ,IAAI,CAAC,SAAS,QAAQ,IAAI,mBAAmB;kEACzE,QAAQ,IAAI,CAAC,SAAS,QAAQ,kBAAI,sOAAC,wQAAS;4DAAC,WAAU;;;;;uGAAe;;;;;;oDACpE;;;;;;;0DAGX,sOAAC;gDAAG,WAAU;;kEACV,sOAAC;wDAAK,WAAW,AAAC,QAAmF,OAA5E,eAAe,IAAI,CAAC,SAAS,QAAQ,IAAI,mBAAmB;kEAChF,eAAe,IAAI,CAAC,SAAS,QAAQ,kBAAI,sOAAC,wQAAS;4DAAC,WAAU;;;;;uGAAe;;;;;;oDAC3E;;;;;;;;;;;;;;;;;;;;;;;;;kCAO3B,sOAAC;;0CACG,sOAAC;gCAAM,SAAQ;gCAAkB,WAAU;0CAA+C;;;;;;0CAC1F,sOAAC;gCAAI,WAAU;;kDACX,sOAAC;wCAAI,WAAU;kDACX,cAAA,sOAAC,uRAAc;4CAAC,WAAU;;;;;;;;;;;kDAE9B,sOAAC;wCACG,IAAG;wCACH,MAAK;wCACL,MAAM,eAAe,SAAS;wCAC9B,QAAQ;wCACR,OAAO,SAAS,eAAe;wCAC/B,UAAU;wCACV,WAAU;wCACV,aAAY;;;;;;oCAEf,SAAS,eAAe,kBACrB,sOAAC;wCAAI,WAAU;kDACV,iCAAmB,sOAAC,wQAAS;4CAAC,WAAU;;;;;qGAA8B,sOAAC,qPAAK;4CAAC,WAAU;;;;;;;;;;;;;;;;;4BAInG,SAAS,eAAe,IAAI,CAAC,kCAC1B,sOAAC;gCAAE,WAAU;0CAA4B;;;;;;;;;;;;kCAGjD,sOAAC;wBAAI,WAAU;;0CACX,sOAAC;gCACG,IAAG;gCACH,MAAK;gCACL,MAAK;gCACL,SAAS;gCACT,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,OAAO;gCAClD,QAAQ;gCACR,WAAU;;;;;;0CAEd,sOAAC;gCAAM,SAAQ;gCAAQ,WAAU;;oCAAmC;kDAClD,sOAAC;wCAAE,MAAK;wCAAI,WAAU;kDAAoE;;;;;;oCAA4B;kDAAO,sOAAC;wCAAE,MAAK;wCAAI,WAAU;kDAAoE;;;;;;;;;;;;;;;;;;kCAG7O,sOAAC;kCACG,cAAA,sOAAC;4BACG,MAAK;4BACL,UAAU,WAAW,CAAC,oBAAoB,CAAC;4BAC3C,WAAW,AAAC,oRAAyW,OAAtF,WAAW,CAAC,oBAAoB,CAAC,gBAAgB,kCAAkC;sCAEjX,wBACG,sOAAC;gCAAI,WAAU;gCAA6C,OAAM;gCAA6B,MAAK;gCAAO,SAAQ;;kDAC/G,sOAAC;wCAAO,WAAU;wCAAa,IAAG;wCAAK,IAAG;wCAAK,GAAE;wCAAK,QAAO;wCAAe,aAAY;;;;;;kDACxF,sOAAC;wCAAK,WAAU;wCAAa,MAAK;wCAAe,GAAE;;;;;;;;;;;2EAGvD;;;;;;;;;;;;;;;;;0BAKhB,sOAAC;gBAAI,WAAU;;kCACX,sOAAC;wBAAI,WAAU;;0CACX,sOAAC;gCAAI,WAAU;0CACX,cAAA,sOAAC;oCAAI,WAAU;;;;;;;;;;;0CAEnB,sOAAC;gCAAI,WAAU;0CACX,cAAA,sOAAC;oCAAK,WAAU;8CAA8B;;;;;;;;;;;;;;;;;kCAGtD,sOAAC;wBAAI,WAAU;;0CACX,sOAAC;gCAAO,MAAK;gCAAS,WAAU;0CAC5B,cAAA,sOAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAe,SAAQ;oCAAY,eAAY;;sDACzE,sOAAC;4CAAK,GAAE;4CAA0H,MAAK;;;;;;sDACvI,sOAAC;4CAAK,GAAE;4CAAwI,MAAK;;;;;;sDACrJ,sOAAC;4CAAK,GAAE;4CAAgI,MAAK;;;;;;sDAC7I,sOAAC;4CAAK,GAAE;4CAAsI,MAAK;;;;;;;;;;;;;;;;;0CAG3J,sOAAC;gCAAO,MAAK;gCAAS,WAAU;0CAC5B,cAAA,sOAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAe,SAAQ;oCAAY,eAAY;8CACzE,cAAA,sOAAC;wCAAK,UAAS;wCAAU,GAAE;wCAA8iB,UAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAKlmB,sOAAC;gBAAE,WAAU;;oBAAyC;kCACjC,sOAAC;wBAAO,SAAS;wBAAiB,WAAU;kCAA8G;;;;;;;;;;;;;;AAI3L;GAzPM;KAAA;uCA2PS","debugId":null}},
    {"offset": {"line": 2504, "column": 0}, "map": {"version":3,"sources":["file:///Users/med_yassine_khlaf/Documents/GitHub/PetConnect_PWA/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { EyeIcon, EyeOffIcon, UserIcon, LockIcon, MailIcon, CheckIcon, XIcon } from 'lucide-react';\n\n// Imports des nouveaux composants d'authentification\nimport ForgotPasswordForm from './auth/ForgotPasswordForm';\nimport VerifyOTPForm from './auth/VerifyOTPForm';\nimport ResetPasswordForm from './auth/ResetPasswordForm';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\n\nexport default function HomePage() {\n  const router = useRouter();\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [isRegister, setIsRegister] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [isForgotPasswordOpen, setIsForgotPasswordOpen] = useState(false);\n  const [isVerifyOTPOpen, setIsVerifyOTPOpen] = useState(false);\n  const [isResetPasswordOpen, setIsResetPasswordOpen] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      // Logique de soumission existante (gardée intacte)\n      if (email === 'demo@example.com' && password === 'password') {\n        router.push('/home');\n      } else {\n        setError('Email ou mot de passe incorrect');\n      }\n    }, 1500);\n  };\n\n  // Logique pour Register (gardée intacte)\n  const handleRegisterSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    if (!termsAccepted) {\n      setError('Veuillez accepter les conditions d\\'utilisation');\n      return;\n    }\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      // Logique de soumission existante\n    }, 1500);\n  };\n\n  // Logique pour Forgot Password (gardée intacte)\n  const handleForgotPasswordSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setIsForgotPasswordOpen(false);\n      setIsVerifyOTPOpen(true);\n    }, 1500);\n  };\n\n  // Logique pour Verify OTP (gardée intacte)\n  const handleVerifyOTPSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setIsVerifyOTPOpen(false);\n      setIsResetPasswordOpen(true);\n    }, 1500);\n  };\n\n  // Logique pour Reset Password (gardée intacte)\n  const handleResetPasswordSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setIsResetPasswordOpen(false);\n      // Rediriger vers login ou ailleurs\n    }, 1500);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2]\">\n      {/* Navbar fixe (préservée exactement comme fournie) */}\n      <nav className=\"fixed top-0 left-0 right-0 bg-white shadow-md z-10 p-4 md:p-6\">\n        <div className=\"flex justify-center gap-8 text-lg font-semibold\">\n          <a href=\"#home\" className=\"text-gray-700 hover:text-[#3D9EFF] transition-colors\">Home</a>\n          <a href=\"#about\" className=\"text-gray-700 hover:text-[#3D9EFF] transition-colors\">About Us</a>\n          <a href=\"#services\" className=\"text-gray-700 hover:text-[#3D9EFF] transition-colors\">Services</a>\n          <a href=\"#contact\" className=\"text-gray-700 hover:text-[#3D9EFF] transition-colors\">Contact</a>\n        </div>\n      </nav>\n\n      {/* Contenu scrollable (préservé exactement comme fourni) */}\n      <div className=\"pt-20 overflow-y-auto\">\n        {/* Section Home (préservée exactement comme fournie, avec bouton ajusté) */}\n        <section id=\"home\" className=\"min-h-screen flex flex-col md:flex-row items-center justify-center p-8 gap-8\">\n          <div className=\"flex-1 text-center md:text-left\">\n            <h1 className=\"text-3xl md:text-5xl font-bold text-gray-800 mb-4\">Welcome to PetCareVerse</h1>\n            <p className=\"text-lg text-gray-600 mb-6\">Votre plateforme complète pour le soin de vos animaux de compagnie. Découvrez nos services innovants pour la santé, la nutrition et bien plus.</p>\n            <button\n              className=\"bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] text-gray-800 px-8 py-4 rounded-full font-bold text-lg hover:scale-105 transition-transform shadow-lg\"\n              onClick={() => { setIsLoginOpen(true); setIsRegister(false); }}\n            >\n              Get Started\n            </button>\n          </div>\n          <div className=\"flex-1\">\n            <img src=\"/images/welcome_page/home-image.jpg\" alt=\"Home\" className=\"w-full h-64 md:h-96 object-cover rounded-lg shadow-lg\" />\n          </div>\n        </section>\n\n        {/* Section About Us (ajoutée pour compléter, basée sur votre fichier) */}\n        <section id=\"about\" className=\"min-h-screen flex flex-col md:flex-row items-center justify-center p-8 gap-8 bg-gray-50\">\n          <div className=\"flex-1\">\n            <img src=\"/images/welcome_page/about-image.jpg\" alt=\"About Us\" className=\"w-full h-64 md:h-96 object-cover rounded-lg shadow-lg\" />\n          </div>\n          <div className=\"flex-1 text-center md:text-left\">\n            <h2 className=\"text-3xl md:text-5xl font-bold text-gray-800 mb-4\">À Propos de Nous</h2>\n            <p className=\"text-lg text-gray-600 mb-6\">PetCareVerse est une plateforme dédiée au bien-être animal, utilisant l'IA pour offrir des soins personnalisés à vos chats et chiens. Notre mission : un écosystème mondial pour les pets.</p>\n            <button className=\"bg-gradient-to-r from-[#C97BFF] to-[#FF9A3D] text-white px-6 py-3 rounded-full font-bold hover:scale-105 transition-transform\">En Savoir Plus</button>\n          </div>\n        </section>\n\n        {/* Section Services (ajoutée pour compléter, basée sur votre fichier) */}\n        <section id=\"services\" className=\"min-h-screen flex flex-col md:flex-row items-center justify-center p-8 gap-8\">\n          <div className=\"flex-1 text-center md:text-left\">\n            <h2 className=\"text-3xl md:text-5xl font-bold text-gray-800 mb-4\">Nos Services</h2>\n            <p className=\"text-lg text-gray-600 mb-6\">Santé, Nutrition, Éducation, Adoption – tout ce dont votre animal a besoin, centralisé dans une IA intelligente pour des conseils personnalisés.</p>\n            <button className=\"bg-gradient-to-r from-[#3D9EFF] to-[#C97BFF] text-white px-6 py-3 rounded-full font-bold hover:scale-105 transition-transform\">Explorer</button>\n          </div>\n          <div className=\"flex-1\">\n            <img src=\"/images/welcome_page/services-image.jpg\" alt=\"Services\" className=\"w-full h-64 md:h-96 object-cover rounded-lg shadow-lg\" />\n          </div>\n        </section>\n\n        {/* Section Contact (ajoutée pour compléter, basée sur votre fichier) */}\n        <section id=\"contact\" className=\"min-h-screen flex flex-col items-center justify-center p-8 bg-gray-50\">\n          <h2 className=\"text-3xl md:text-5xl font-bold text-gray-800 mb-4\">Contactez-Nous</h2>\n          <p className=\"text-lg text-gray-600 mb-6 text-center max-w-md\">Besoin d'aide ? Envoyez-nous un message ou rejoignez notre communauté pour plus d'informations.</p>\n          <img src=\"/images/welcome_page/contact-image.jpg\" alt=\"Contact\" className=\"w-full h-64 md:h-96 object-cover rounded-lg shadow-lg mb-6\" />\n          <button className=\"bg-gradient-to-r from-[#FF9A3D] to-[#C97BFF] text-white px-6 py-3 rounded-full font-bold hover:scale-105 transition-transform\">Nous Contacter</button>\n        </section>\n\n        {/* Ajoutez ici d'autres sections si présentes (ex. : témoignages, footer, etc.) – gardées intactes */}\n\n        {/* Popups d'authentification intégrés */}\n        {/* Popup de Login/Register */}\n        {isLoginOpen && (\n          <div className=\"fixed inset-0 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] bg-opacity-80 backdrop-blur-md z-50 flex items-center justify-center p-4\" onClick={() => setIsLoginOpen(false)}>\n            <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\" onClick={(e) => e.stopPropagation()}>\n              {!isRegister ? (\n                <Login onSwitchToRegister={() => setIsRegister(true)} onOpenForgotPassword={() => setIsForgotPasswordOpen(true)} />\n              ) : (\n                <Register onSwitchToLogin={() => setIsRegister(false)} />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Popup de Forgot Password */}\n        {isForgotPasswordOpen && (\n          <div className=\"fixed inset-0 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] bg-opacity-80 backdrop-blur-md z-50 flex items-center justify-center p-4\" onClick={() => setIsForgotPasswordOpen(false)}>\n            <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\" onClick={(e) => e.stopPropagation()}>\n              <ForgotPasswordForm onOpenVerifyOTP={() => setIsVerifyOTPOpen(true)} onOpenLogin={() => setIsLoginOpen(true)} />\n            </div>\n          </div>\n        )}\n\n        {/* Popup de Verify OTP */}\n        {isVerifyOTPOpen && (\n          <div className=\"fixed inset-0 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] bg-opacity-80 backdrop-blur-md z-50 flex items-center justify-center p-4\" onClick={() => setIsVerifyOTPOpen(false)}>\n            <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\" onClick={(e) => e.stopPropagation()}>\n              <VerifyOTPForm onOpenResetPassword={() => setIsResetPasswordOpen(true)} onOpenLogin={() => setIsForgotPasswordOpen(true)} />\n            </div>\n          </div>\n        )}\n\n        {/* Popup de Reset Password */}\n        {isResetPasswordOpen && (\n          <div className=\"fixed inset-0 bg-gradient-to-r from-[#F5F5DC] to-[#FFB8C2] bg-opacity-80 backdrop-blur-md z-50 flex items-center justify-center p-4\" onClick={() => setIsResetPasswordOpen(false)}>\n            <div className=\"w-full max-w-md mx-auto bg-white p-8 rounded-xl shadow-md\" onClick={(e) => e.stopPropagation()}>\n              <ResetPasswordForm />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}